
/* Merge Sort - Hata Çözümü
1)Ana sınıfın adı"Main" olmalı
2)"public static void main" eklenerek sıralanmış dizi tanımlanmalı(algoritmanın nasıl çalıştığını test etmek için)
3)sıralı diziyi birleştirmek için mergeSort fonksiyonu kullanılmalı
4) "printArray" fonksiyonu ile sıralama sonucu ekrana yazdırılmalı. */

//Main kısmı
public class Main {
    public static void main(String[] args) {                                                  //Osman ARI 2211502018
        int[] arr = {33, 11, 13, 5, 6, 7};
        System.out.println("Sıralanmamış dizi:");
        Data.printArray(arr);

        Data.mergeSort(arr, 0, arr.length - 1);

        System.out.println("\nSıralanmış dizi:");
        Data.printArray(arr);
    }
}

//Data kısmı
class Data {
    static void mergeSort(int[] array, int left, int right) {
        if (left < right) {
            int middle = (left + right) / 2;

            // Sol ve sağ alt dizileri sıralar
            mergeSort(array, left, middle);
            mergeSort(array, middle + 1, right);

            // Sıralı alt dizileri birleştirir
            merge(array, left, middle, right);
        }
    }
    static void merge(int[] array, int left, int middle, int right) {
        int n1 = middle - left + 1;
        int n2 = right - middle;

        int[] leftArray = new int[n1];
        int[] rightArray = new int[n2];

        for (int i = 0; i < n1; ++i)
            leftArray[i] = array[left + i];
        for (int j = 0; j < n2; ++j)
            rightArray[j] = array[middle + 1 + j];

        int i = 0, j = 0;
        int k = left;
        while (i < n1 && j < n2) {
            if (leftArray[i] <= rightArray[j]) {
                array[k] = leftArray[i];
                i++;
            } else {
                array[k] = rightArray[j];
                j++;
            }
            k++;
        }
        while (i < n1) {
            array[k] = leftArray[i];
            i++;
            k++;
        }

        while (j < n2) {
            array[k] = rightArray[j];
            j++;
            k++;
        }
    }

    static void printArray(int[] array) {
        for (int i = 0; i < array.length; ++i) {
            System.out.print(array[i] + " ");
        }
        System.out.println();
    }
}
/*----------------------------------------------------------------------------------------------------------*/
//Merge Sort
public class Main{
    public static void main(String[] args) {
        int[] arr = {33, 11, 13, 5, 6, 7};
        System.out.println("Sıralanmamış dizi:");
        printArray(arr);

        mergeSort(arr, 0, arr.length - 1);

        System.out.println("\nSıralanmış dizi:");
        printArray(arr);
    }

    static void mergeSort(int[] array, int left, int right) {
        if (left < right) {
            int middle = (left + right) / 2;

            // Sol ve sağ alt dizileri sıralar
            mergeSort(array, left, middle);
            mergeSort(array, middle + 1, right);

            // Sıralı alt dizileri birleştirir
            merge(array, left, middle, right);
        }
    }

    static void merge(int[] array, int left, int middle, int right) {
        int n1 = middle - left + 1;
        int n2 = right - middle;

        int[] leftArray = new int[n1];
        int[] rightArray = new int[n2];

        for (int i = 0; i < n1; ++i)
            leftArray[i] = array[left + i];
        for (int j = 0; j < n2; ++j)
            rightArray[j] = array[middle + 1 + j];

        int i = 0, j = 0;
        int k = left;
        while (i < n1 && j < n2) {
            if (leftArray[i] <= rightArray[j]) {
                array[k] = leftArray[i];
                i++;
            } else {
                array[k] = rightArray[j];
                j++;
            }
            k++;
        }

        while (i < n1) {
            array[k] = leftArray[i];
            i++;
            k++;
        }

        while (j < n2) {
            array[k] = rightArray[j];
            j++;
            k++;
        }
    }
    static void printArray(int[] array) {
        for (int i = 0; i < array.length; ++i) {
            System.out.print(array[i] + " ");
        }
        System.out.println();
    }
}
