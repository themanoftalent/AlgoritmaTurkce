//The Shortest Path(Dijkstra)
/*
  örnek 1)
Başlangıç noktası:A
Bitiş noktası:D                                        
                                                            //Osman ARI 2211502018
Verilen yol ağırlıkları:
A-->B:4 birim 
A-->C:2 birim
B-->C:1 birim
B-->D:6 birim
C-->D:7 birim
    A-D arasındaki her yol denendiğinde en kısa yol 9 birimlik A-C-D yolu olur .
 */


// örnek 2)
import java.util.Arrays;
public class Main{
    public static void main(String[] args){
        int[][] graph={
                {0,5,0,0},
                {0,0,3,0},
                {0,0,0,2},
                {0,0,0,0}
        };
        int source=0; //Kaynak düğüm
        int[] dist=new int[graph.length];
        Arrays.fill(dist, Integer.MAX_VALUE);
        dist [source]=0;

        for(int i=0;i<graph.length;i++){
            for(int u=0;u<graph.length;u++){
                for(int v=0;v<graph.length;v++){
                    if(graph[u][v]!=0 && dist[u]!=Integer.MAX_VALUE && dist[u]+graph[u][v] <dist[v]) {
                        dist[v] = dist[u] + graph[u][v];
                    }
                }
            }
        }
        System.out.println("Kaynaktan düğümlere en kısa mesafeler:");
        for(int i=0;i<graph.length;i++){
            System.out.println("Düğüm"+i+":En kısa mesafe "+dist[i]);
        }
    }
}

//örnek 2 çıktısı:
/*
Kaynaktan düğümlere en kısa mesafeler:
Düğüm0:En kısa mesafe 0
Düğüm1:En kısa mesafe 5
Düğüm2:En kısa mesafe 8
Düğüm3:En kısa mesafe 10
*/
